{"ast":null,"code":"var _jsxFileName = \"/Users/dmendoza/Documents/react-projects/movies/src/components/TheatersToday.js\";\nimport React, { useEffect } from 'react';\n\nconst TheatersToday = ({\n  fetchMovies\n}) => {\n  let date = new Date(),\n      monthAgo = date.getMonth(),\n      month = date.getMonth() + 1,\n      day = date.getDate().toString(),\n      year = date.getFullYear();\n  month = month.length > 1 ? month.toString() : '0' + month;\n\n  if (monthAgo === 0) {\n    monthAgo = '12';\n    year = year - 1;\n  } else {\n    monthAgo = monthAgo.toString().length > 1 ? monthAgo.toString() : '0' + monthAgo;\n  }\n\n  let todaysDate = year + '-' + month + '-' + day;\n  let monthAgoDate = year + '-' + monthAgo + '-' + day;\n  useEffect(fetchMovies => {\n    let query = '&primary_release_date.gte=' + monthAgoDate + '&primary_release_date.lte=' + todaysDate;\n    fetchMovies('discover', query);\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"title-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"In theaters today\"));\n};\n\nexport default TheatersToday;","map":{"version":3,"sources":["/Users/dmendoza/Documents/react-projects/movies/src/components/TheatersToday.js"],"names":["React","useEffect","TheatersToday","fetchMovies","date","Date","monthAgo","getMonth","month","day","getDate","toString","year","getFullYear","length","todaysDate","monthAgoDate","query"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAmB;AACvC,MAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;AAAA,MACIC,QAAQ,GAAGF,IAAI,CAACG,QAAL,EADf;AAAA,MAEIC,KAAK,GAAGJ,IAAI,CAACG,QAAL,KAAkB,CAF9B;AAAA,MAGIE,GAAG,GAAGL,IAAI,CAACM,OAAL,GAAeC,QAAf,EAHV;AAAA,MAIIC,IAAI,GAAGR,IAAI,CAACS,WAAL,EAJX;AAKAL,EAAAA,KAAK,GAAGA,KAAK,CAACM,MAAN,GAAe,CAAf,GAAmBN,KAAK,CAACG,QAAN,EAAnB,GAAsC,MAAKH,KAAnD;;AACA,MAAGF,QAAQ,KAAK,CAAhB,EAAmB;AACjBA,IAAAA,QAAQ,GAAG,IAAX;AACAM,IAAAA,IAAI,GAAGA,IAAI,GAAG,CAAd;AACD,GAHD,MAGO;AACLN,IAAAA,QAAQ,GAAGA,QAAQ,CAACK,QAAT,GAAoBG,MAApB,GAA6B,CAA7B,GAAiCR,QAAQ,CAACK,QAAT,EAAjC,GAAuD,MAAKL,QAAvE;AACD;;AACD,MAAIS,UAAU,GAAGH,IAAI,GAAG,GAAP,GAAaJ,KAAb,GAAqB,GAArB,GAA2BC,GAA5C;AACA,MAAIO,YAAY,GAAGJ,IAAI,GAAG,GAAP,GAAaN,QAAb,GAAwB,GAAxB,GAA8BG,GAAjD;AAEAR,EAAAA,SAAS,CAAGE,WAAD,IAAiB;AAC1B,QAAIc,KAAK,GAAE,+BAA+BD,YAA/B,GAA8C,4BAA9C,GAA6ED,UAAxF;AACAZ,IAAAA,WAAW,CAAC,UAAD,EAAYc,KAAZ,CAAX;AACD,GAHQ,EAGN,EAHM,CAAT;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CADF;AAKD,CAzBD;;AA2BA,eAAef,aAAf","sourcesContent":["import React, {useEffect} from 'react';\n\nconst TheatersToday = ({fetchMovies}) => {\n  let date = new Date(),\n      monthAgo = date.getMonth(),\n      month = date.getMonth() + 1,\n      day = date.getDate().toString(),\n      year = date.getFullYear();\n  month = month.length > 1 ? month.toString() : '0'+ month;\n  if(monthAgo === 0) {\n    monthAgo = '12';\n    year = year - 1;\n  } else {\n    monthAgo = monthAgo.toString().length > 1 ? monthAgo.toString() : '0'+ monthAgo;\n  }\n  let todaysDate = year + '-' + month + '-' + day;\n  let monthAgoDate = year + '-' + monthAgo + '-' + day;\n\n  useEffect( (fetchMovies) => {\n    let query= '&primary_release_date.gte=' + monthAgoDate + '&primary_release_date.lte=' + todaysDate;\n    fetchMovies('discover',query);\n  }, []);\n  return (\n    <div className=\"title-container\">\n      <h2>In theaters today</h2>\n    </div>\n  )\n}\n\nexport default TheatersToday;\n"]},"metadata":{},"sourceType":"module"}